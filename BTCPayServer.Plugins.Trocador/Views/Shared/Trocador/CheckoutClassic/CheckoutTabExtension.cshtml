@using BTCPayServer.Plugins.Trocador
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@inject TrocadorService TrocadorService
@{
var storeId = ((JObject)JObject.Parse(JsonConvert.SerializeObject(Model)))["StoreId"].Value<string>();
  var settings = await TrocadorService.GetTrocadorForStore(storeId);

  if (settings?.Enabled is not true)
  {
  return;
  }

  const string paymentMethodId = "Trocador";
  string paymentMethodTitle = settings.PaymentMethodTitle;
  string paymentMethodSubtitle = settings.PaymentMethodSubtitle;
  int shouldSwitch = settings.ShowFirst is true ? 1 : 0;
  }

  <template v-if="@shouldSwitch">
    <div
      class="payment-tabs__tab"
      id="@paymentMethodId-tab"
      v-on:click="switchTab('@paymentMethodId')"
      v-bind:class="{ 'active': currentTab == '@paymentMethodId'}"
    >
      <trocador-tab
        inline-template
        :switch-tab="() => switchTab('@paymentMethodId')"
        :current-tab="currentTab"
        :should-switch="@shouldSwitch"
      >
        <div style="text-align: center;">
          <span style="display: block;">@paymentMethodTitle</span>
          @if (!string.IsNullOrEmpty(paymentMethodSubtitle))
          {
          <span style="display: block; font-size: smaller; font-weight: lighter">
            @paymentMethodSubtitle
          </span>
          }
        </div>
      </trocador-tab>
    </div>
  </template>
  <template v-else>
    <div
      class="payment-tabs__tab"
      id="@paymentMethodId-tab"
      v-on:click="switchTab('@paymentMethodId')"
      v-bind:class="{ 'active': currentTab == '@paymentMethodId'}"
    >
      <div style="text-align: center;">
        <span style="display: block;">@paymentMethodTitle</span>
        @if (!string.IsNullOrEmpty(paymentMethodSubtitle))
        {
        <span style="display: block; font-size: smaller; font-weight: lighter">
          @paymentMethodSubtitle
        </span>
        }
      </div>
    </div>
  </template>

  <script src="~/Resources/js/trocadorTabComponent.js"></script>
